# read_inertial_data <- function(connection){
#         fileUrl <- paste0('./99_Data/', set, '/Inertial Signals/', src, '_', type, '_', dim, '_', set,  '.txt')
#         print(paste('reading ', fileUrl))
#         d <- readLines(fileUrl)
#         print('success')
#         d <- trimws(d)
#         d <- data.table(d)
#         d <- separate(d, col = d ,into = paste0('V', 1:128), sep = ' +')
#         d <- d[, names(d) := lapply(.SD, as.numeric)]
#         return(d)
# }
View(full_data)
library(zip)
library(tidyr)
library(data.table)
## Opens connection to data location and downloads file, if no data directory exists
if(!file.exists('./99_Data')){
fileUrl <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
temp <- tempfile()
download.file(url = fileUrl, destfile = temp)
unzip(zipfile = temp)
file.rename('./UCI HAR Dataset/', './99_Data')
}
## import training data
subject_train <- data.table::fread(
file = './99_Data/train/subject_train.txt',
header = FALSE,
verbose = TRUE,
col.names = 'participant',
strip.white = TRUE,
)
activities_train <- data.table::fread(
file = './99_Data/train/y_train.txt',
header = FALSE,
verbose = TRUE,
col.names = 'activitylabel',
strip.white = TRUE,
)
headings_train <- data.table::fread(
file = '99_Data/features.txt',
header = FALSE,
verbose = TRUE,
sep = ' ',
col.names = c('featurename'),
select = 2,
strip.white = TRUE
)
column_selectors_train <- headings_train[
like(featurename, pattern = '*(-std|-mean)'),
which = TRUE
]
column_names_train <- headings_train[
like(featurename, pattern = '*(-std|-mean)')
]
data_train <- data.table::fread(
file = './99_Data/train/X_train.txt',
header = FALSE,
verbose = TRUE,
sep = ' ',
col.names = unlist(column_names_train),
select = column_selectors_train,
strip.white = TRUE
)
factor_train <- data.table::fread(
text = rep('train', lengths(subject_train)),
header = FALSE,
verbose = TRUE,
col.names = c('set')
)
training_data <- cbind(
subject_train,
activities_train,
factor_train,
data_train
)
## Import test data
subject_test <- data.table::fread(
file = './99_Data/test/subject_test.txt',
header = FALSE,
verbose = TRUE,
col.names = 'participant',
strip.white = TRUE,
)
activities_test <- data.table::fread(
file = './99_Data/test/y_test.txt',
header = FALSE,
verbose = TRUE,
col.names = 'activitylabel',
strip.white = TRUE,
)
headings_test <- data.table::fread(
file = '99_Data/features.txt',
header = FALSE,
verbose = TRUE,
sep = ' ',
col.names = c('featurename'),
select = 2,
strip.white = TRUE
)
column_selectors_test <- headings_test[
like(featurename, pattern = '*(-std|-mean)'),
which = TRUE
]
column_names_test <- headings_test[
like(featurename, pattern = '*(-std|-mean)')
]
data_test <- data.table::fread(
file = './99_Data/test/X_test.txt',
header = FALSE,
verbose = TRUE,
sep = ' ',
col.names = unlist(column_names_test),
select = column_selectors_test,
strip.white = TRUE
)
factor_test <- data.table::fread(
text = rep('test', lengths(subject_test)),
header = FALSE,
verbose = TRUE,
col.names = c('set')
)
test_data <- cbind(
subject_test,
activities_test,
factor_test,
data_test
)
## combine test and training data
full_data <- rbind(
test_data,
training_data
)
## sets file paths for easier processing
# subject_train <- readLines('./99_Data/train/subject_train.txt')
# subject_test <- readLines('./99_Data/test/subject_test.txt')
## moves all files into data tables
# subject_train <- data.table(subject_train)
# subject_test <- data.table(subject_test)
## reads body_acc data and returns clean data table
# read_inertial_data <- function(connection){
#         fileUrl <- paste0('./99_Data/', set, '/Inertial Signals/', src, '_', type, '_', dim, '_', set,  '.txt')
#         print(paste('reading ', fileUrl))
#         d <- readLines(fileUrl)
#         print('success')
#         d <- trimws(d)
#         d <- data.table(d)
#         d <- separate(d, col = d ,into = paste0('V', 1:128), sep = ' +')
#         d <- d[, names(d) := lapply(.SD, as.numeric)]
#         return(d)
# }
View(full_data)
?gsub
?sub
full_data$activitylabel <- sub(
as.character(1:6),
full_data$activitylabel,
replacement = c('WALKING',
'WALKING_UPSTAIRS',
'WALKING_DOWNSTAIRS',
'SITTING',
'STANDING',
'LAYING')
)
levels(full_data$activitylabel) <- c('WALKING', 'WALKING_UPSTAIRS', 'WALKING_DOWNSTAIRS', 'SITTING', 'STANDING', 'LAYING')
View(full_data)
full_data$activitylabel <- levels(full_data$activitylabel) <- c('WALKING', 'WALKING_UPSTAIRS', 'WALKING_DOWNSTAIRS', 'SITTING', 'STANDING', 'LAYING')
View(full_data)
full_data$activitylabel <- levels(full_data$activitylabel, c('WALKING', 'WALKING_UPSTAIRS', 'WALKING_DOWNSTAIRS', 'SITTING', 'STANDING', 'LAYING'))
?cut
activity_labels <- data.table::fread(
file = './99_Data/activity_labels.txt',
header = FALSE,
verbose = TRUE,
col.names = c('index', 'labels'),
sep = ' ',
select = 'labels',
strip.white = TRUE
)
activity_labels <- data.table::fread(
file = './99_Data/activity_labels.txt',
header = FALSE,
verbose = TRUE,
sep = ' ',
col.names = c('index', 'labels'),
select = 'labels',
strip.white = TRUE
)
activity_labels <- data.table::fread(
file = './99_Data/activity_labels.txt',
header = FALSE,
verbose = TRUE,
sep = ' ',
col.names = c('index', 'labels'),
#select = 'labels',
strip.white = TRUE
)
View(activity_labels)
activity_labels <- data.table::fread(
file = './99_Data/activity_labels.txt',
header = FALSE,
verbose = TRUE,
sep = ' ',
col.names = c('index', 'labels'),
select = c('labels'),
strip.white = TRUE
)
activity_labels <- data.table::fread(
file = './99_Data/activity_labels.txt',
header = FALSE,
verbose = TRUE,
sep = ' ',
col.names = c('labels'),
select = 2,
strip.white = TRUE
)
View(activity_labels)
full_data$activitylabel <- cut(full_data$activitylabel, breaks = 1:6, labels = unlist(activity_labels))
full_data$activitylabel <- cut(unlist(full_data$activitylabel), breaks = 1:6, labels = unlist(activity_labels))
full_data$activitylabel <- cut(as.numeric(full_data$activitylabel), breaks = 1:6, labels = unlist(activity_labels))
View(full_data)
library(zip)
library(tidyr)
library(data.table)
## Opens connection to data location and downloads file, if no data directory exists
if(!file.exists('./99_Data')){
fileUrl <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
temp <- tempfile()
download.file(url = fileUrl, destfile = temp)
unzip(zipfile = temp)
file.rename('./UCI HAR Dataset/', './99_Data')
}
## import training data
subject_train <- data.table::fread(
file = './99_Data/train/subject_train.txt',
header = FALSE,
verbose = TRUE,
col.names = 'participant',
strip.white = TRUE,
)
activities_train <- data.table::fread(
file = './99_Data/train/y_train.txt',
header = FALSE,
verbose = TRUE,
col.names = 'activitylabel',
strip.white = TRUE,
)
headings_train <- data.table::fread(
file = '99_Data/features.txt',
header = FALSE,
verbose = TRUE,
sep = ' ',
col.names = c('featurename'),
select = 2,
strip.white = TRUE
)
column_selectors_train <- headings_train[
like(featurename, pattern = '*(-std|-mean)'),
which = TRUE
]
column_names_train <- headings_train[
like(featurename, pattern = '*(-std|-mean)')
]
data_train <- data.table::fread(
file = './99_Data/train/X_train.txt',
header = FALSE,
verbose = TRUE,
sep = ' ',
col.names = unlist(column_names_train),
select = column_selectors_train,
strip.white = TRUE
)
factor_train <- data.table::fread(
text = rep('train', lengths(subject_train)),
header = FALSE,
verbose = TRUE,
col.names = c('set')
)
training_data <- cbind(
subject_train,
activities_train,
factor_train,
data_train
)
## Import test data
subject_test <- data.table::fread(
file = './99_Data/test/subject_test.txt',
header = FALSE,
verbose = TRUE,
col.names = 'participant',
strip.white = TRUE,
)
activities_test <- data.table::fread(
file = './99_Data/test/y_test.txt',
header = FALSE,
verbose = TRUE,
col.names = 'activitylabel',
strip.white = TRUE,
)
headings_test <- data.table::fread(
file = '99_Data/features.txt',
header = FALSE,
verbose = TRUE,
sep = ' ',
col.names = c('featurename'),
select = 2,
strip.white = TRUE
)
column_selectors_test <- headings_test[
like(featurename, pattern = '*(-std|-mean)'),
which = TRUE
]
column_names_test <- headings_test[
like(featurename, pattern = '*(-std|-mean)')
]
data_test <- data.table::fread(
file = './99_Data/test/X_test.txt',
header = FALSE,
verbose = TRUE,
sep = ' ',
col.names = unlist(column_names_test),
select = column_selectors_test,
strip.white = TRUE
)
factor_test <- data.table::fread(
text = rep('test', lengths(subject_test)),
header = FALSE,
verbose = TRUE,
col.names = c('set')
)
test_data <- cbind(
subject_test,
activities_test,
factor_test,
data_test
)
## combine test and training data
full_data <- rbind(
test_data,
training_data
)
activity_labels <- data.table::fread(
file = './99_Data/activity_labels.txt',
header = FALSE,
verbose = TRUE,
sep = ' ',
col.names = c('labels'),
select = 2,
strip.white = TRUE
)
full_data$activitylabel <- factor(full_data$activitylabel)
full_data$activitylabel <- cut(as.numeric(full_data$activitylabel), breaks = 1:6, labels = unlist(activity_labels))
View(full_data)
full_data$activitylabel <- factor(full_data$activitylabel, levels(1:6), labels = unlist(activity_labels))
full_data$activitylabel <- factor(full_data$activitylabel, levels = (1:6), labels = unlist(activity_labels))
View(full_data)
column_names_test
data.table::split?
?+data.table::split
?data.table::split
?group
?group_by
## creates second, tidy data set, compressing multiple readings for each activity along factor variable
final_data <- grup_by(
full_data,
activitylabel,
)
## creates second, tidy data set, compressing multiple readings for each activity along factor variable
final_data <- group_by(
full_data,
activitylabel,
)
View(final_data)
class(full_data$activitylabel[1])
?aggregate
## creates second, tidy data set, compressing multiple readings for each activity along factor variable
final_data <- aggregate(
full_data,
activitylabel,
mean
)
## creates second, tidy data set, compressing multiple readings for each activity along factor variable
final_data <- aggregate(
full_data,
full_data$activitylabel,
mean
)
## creates second, tidy data set, compressing multiple readings for each activity along factor variable
final_data <- aggregate(
full_data,
as.list(full_data$activitylabel),
mean
)
## creates second, tidy data set, compressing multiple readings for each activity along factor variable
final_data <- plyr::ddply(
full_data,
~activitylabel,
summarise,
mean(names(full_data))
)
## creates second, tidy data set, compressing multiple readings for each activity along factor variable
final_data <- plyr::ddply(
full_data,
~activitylabel,
summarise,
mean
)
## creates second, tidy data set, compressing multiple readings for each activity along factor variable
final_data <- plyr::ddply(
full_data,
~activitylabel,
summarise,
mean(full_data$names(full_data[1]))
)
## creates second, tidy data set, compressing multiple readings for each activity along factor variable
final_data <- plyr::ddply(
full_data,
~activitylabel,
summarise
)
View(final_data)
View(final_data)
View(full_data)
## creates second, tidy data set, compressing multiple readings for each activity along factor variable
final_data <- plyr::ddply(
full_data,
~activitylabel,
summarise
mean('tBodyAcc()')
)
## creates second, tidy data set, compressing multiple readings for each activity along factor variable
final_data <- plyr::ddply(
full_data,
~activitylabel,
summarise
mean(tBodyAcc())
)
## creates second, tidy data set, compressing multiple readings for each activity along factor variable
final_data <- plyr::ddply(
full_data,
~activitylabel,
summarise
mean(full_data$tBodyAcc())
)
tempvar <- gsub('()', '')
tempvar <- gsub(tempvar, '()', '')
column_names_test <- function(){
tempvar <- headings_test[
like(featurename, pattern = '*(-std|-mean)')
]
tempvar <- gsub(tempvar, '()', '')
}
View(activities_test)
return(tempvar)
column_names_test <- function(){
tempvar <- headings_test[
like(featurename, pattern = '*(-std|-mean)')
]
tempvar <- gsub(tempvar, '()', '')
return(tempvar)
}
column_names_test <- gsub(column_names_test, '()', '')
column_names_test <- headings_test[
like(featurename, pattern = '*(-std|-mean)')
]
column_names_test <- gsub(column_names_test, '()', '')
column_names_test <- gsub(column_names_test, '\\(\\)', '')
column_names_test <- gsub(column_names_test, '\(\)', '')
column_names_test <- gsub(column_names_test, '()', '')
column_names_test <- gsub(column_names_test, '.?\(\)', '')
column_names_test <- gsub(column_names_test, '.?\\(\\)', '')
column_names_test <- gsub(column_names_test, '.?()', '')
## creates second, tidy data set, compressing multiple readings for each activity along factor variable
final_data <- group_by(
full_data,
activitylabel
)
View(final_data)
final_data <- summarize(
final_data,
lapply(
names(final_data),
mean
),
)
## creates second, tidy data set, compressing multiple readings for each activity along factor variable
final_data <- full_data[,
lapply(.SD, mean, na.rm = TRUE),
by = activitylabel,
]
## creates second, tidy data set, compressing multiple readings for each activity along factor variable
final_data <- full_data[,
lapply(.SD, mean, na.rm = TRUE),
by = activitylabel,
.SDcols = unlist(column_names_test)
]
View(final_data)
## creates second, tidy data set, compressing multiple readings for each activity along factor variable
final_data <- full_data[,
lapply(.SD, mean, na.rm = TRUE),
by = list(participant, activitylabel),
.SDcols = unlist(column_names_test)
]
View(final_data)
View(full_data)
View(final_data)
## creates second, tidy data set, compressing multiple readings for each activity along factor variable
final_data <- full_data[,
lapply(.SD, mean, na.rm = TRUE),
by = list(participant, activitylabel, set),
.SDcols = unlist(column_names_test)
]
View(final_data)
